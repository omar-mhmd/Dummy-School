{"ast":null,"code":"import _regeneratorRuntime from \"/home/willyum/Omar/SchoolFinal/front/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/willyum/Omar/SchoolFinal/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/willyum/Omar/SchoolFinal/front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/willyum/Omar/SchoolFinal/front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/willyum/Omar/SchoolFinal/front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/willyum/Omar/SchoolFinal/front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/willyum/Omar/SchoolFinal/front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/willyum/Omar/SchoolFinal/front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/willyum/Omar/SchoolFinal/front/src/Pages/GradeFilesUploadPage/GradeFilesUploadPage.js\";\nimport React from \"react\";\nimport { MDBRow, MDBCol, MDBCard, MDBCardBody, MDBBtn } from \"mdbreact\";\nimport { Link } from \"react-router-dom\";\n\nvar GradeFilesUploadPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GradeFilesUploadPage, _React$Component);\n\n  function GradeFilesUploadPage(props) {\n    var _this;\n\n    _classCallCheck(this, GradeFilesUploadPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GradeFilesUploadPage).call(this, props));\n\n    _this.handleRadioButton = function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.onSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(evt) {\n        var _this$state, selected_grade, file, body;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                evt.preventDefault(); // stop the page from refreshing\n\n                _this$state = _this.state, selected_grade = _this$state.selected_grade, file = _this$state.file;\n\n                if (!selected_grade) {\n                  alert(\"Please select a grade\");\n                } else if (!file) {\n                  alert(\"Please select a file\");\n                } else {\n                  body = new FormData();\n                  body.append(\"file\", file);\n                  body.append(\"grade_id\", selected_grade);\n                  fetch(\"http://localhost:8080/file\", {\n                    method: \"POST\",\n                    body: body\n                  }).then(function (response) {\n                    return response.json();\n                  }).then(function (answer) {\n                    if (answer.success) {\n                      _this.fileInput.value = \"\";\n\n                      _this.setState({\n                        file: null,\n                        selected_grade: null\n                      });\n\n                      alert(\"file uploaded sucessfully \");\n                    }\n                  }).catch(function (error) {\n                    debugger;\n                    alert(\"file was not uploaded. Please upload it using zip file !\");\n                  });\n                }\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      file: null,\n      grades: [],\n      selected_grade: null\n    };\n    return _this;\n  }\n\n  _createClass(GradeFilesUploadPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"http://localhost:8080/grade\").then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        if (data.success) {\n          _this2.setState({\n            grades: data.results\n          });\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"text-center my-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        lg: \"5.5\",\n        md: \"12\",\n        className: \"mb-lg-0 mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(MDBCard, {\n        pricing: true,\n        className: \"white-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"purple-gradient rounded-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"option\",\n        style: {\n          padding: \"2.5rem\",\n          marginBottom: 0,\n          fontWeight: 500\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"UPLOAD\")), React.createElement(MDBCardBody, {\n        className: \"striped black card-background px-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Select a Grade\"), React.createElement(\"div\", {\n        className: \"grade-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        onChange: this.handleRadioButton,\n        name: \"selected_grade\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, this.state.grades.map(function (grade, index) {\n        return React.createElement(\"option\", {\n          value: grade.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, grade.name);\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Select your file\"), React.createElement(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        ref: function ref(_ref2) {\n          return _this3.fileInput = _ref2;\n        },\n        onChange: function onChange(e) {\n          _this3.setState({\n            file: e.target.files[0]\n          });\n        },\n        style: {\n          width: \"550px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })))), React.createElement(MDBBtn, {\n        rounded: true,\n        gradient: \"purple\",\n        className: \"mb-3 mt-3\",\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Upload\")))))));\n    }\n  }]);\n\n  return GradeFilesUploadPage;\n}(React.Component);\n\nexport default GradeFilesUploadPage;","map":{"version":3,"sources":["/home/willyum/Omar/SchoolFinal/front/src/Pages/GradeFilesUploadPage/GradeFilesUploadPage.js"],"names":["React","MDBRow","MDBCol","MDBCard","MDBCardBody","MDBBtn","Link","GradeFilesUploadPage","props","handleRadioButton","e","target","name","value","setState","onSubmit","evt","preventDefault","state","selected_grade","file","alert","body","FormData","append","fetch","method","then","response","json","answer","success","fileInput","catch","error","grades","data","results","console","log","padding","marginBottom","fontWeight","map","grade","index","id","ref","files","width","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { MDBRow, MDBCol, MDBCard, MDBCardBody, MDBBtn } from \"mdbreact\";\nimport { Link } from \"react-router-dom\";\n\nclass GradeFilesUploadPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: null,\n      grades: [],\n      selected_grade: null\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:8080/grade\")\n      .then(response => response.json())\n      .then(data => {\n        if (data.success) {\n          this.setState({\n            grades: data.results\n          });\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  handleRadioButton = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  onSubmit = async evt => {\n    evt.preventDefault(); // stop the page from refreshing\n    const { selected_grade, file } = this.state;\n    if (!selected_grade) {\n      alert(\"Please select a grade\");\n    } else if (!file) {\n      alert(\"Please select a file\");\n    } else {\n      const body = new FormData();\n      body.append(\"file\", file);\n      body.append(\"grade_id\", selected_grade);\n      fetch(\"http://localhost:8080/file\", { method: \"POST\", body })\n        .then(response => {\n          return response.json();\n        })\n        .then(answer => {\n          if (answer.success) {\n            this.fileInput.value = \"\";\n            this.setState({\n              file: null,\n              selected_grade: null\n            });\n            alert(\"file uploaded sucessfully \");\n          }\n        })\n        .catch(error => {\n          debugger;\n          alert(\"file was not uploaded. Please upload it using zip file !\");\n        });\n    }\n  };\n\n  render() {\n    return (\n\n      <div>\n        <section className=\"text-center my-5\">\n\n          <MDBRow>\n            <MDBCol lg=\"5.5\" md=\"12\" className=\"mb-lg-0 mb-4\">\n              <MDBCard pricing className=\"white-text\">\n                <div className=\"purple-gradient rounded-top\">\n                  <h4\n                    className=\"option\"\n                    style={{\n                      padding: \"2.5rem\",\n                      marginBottom: 0,\n                      fontWeight: 500\n                    }}\n                  >\n                    UPLOAD\n              </h4>\n                </div>\n                <MDBCardBody className=\"striped black card-background px-5\">\n                  <ul>\n                    <li>\n                      <div className=\"container\">\n                        <div className=\"row\">\n                          <div className=\"col\">\n                            <h4>Select a Grade</h4>\n\n                            <div className=\"grade-wrapper\">\n                              <select onChange={this.handleRadioButton} name='selected_grade'>\n                                {this.state.grades.map((grade, index) => {\n                                  return <option value={grade.id}>{grade.name}</option>;\n                                })}\n                              </select>\n                            </div>\n                            <br />\n                            <div className=\"row\">\n                              <div className=\"col\">\n                                <h4>Select your file</h4>\n\n                                <input\n                                  type=\"file\"\n                                  name=\"file\"\n                                  ref={ref => (this.fileInput = ref)}\n                                  onChange={e => {\n                                    this.setState({\n                                      file: e.target.files[0]\n                                    });\n                                  }}\n                                  style={{ width: \"550px\" }}\n\n                                />\n                                {/* <input type=\"submit\" value=\"Upload Photo\" onClick={}/>  */}\n                                <br />\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <br />\n                      </div>\n                    </li>\n\n                  </ul>\n\n                  <MDBBtn rounded gradient=\"purple\" className=\"mb-3 mt-3\" onClick={this.onSubmit} >\n                    Upload\n              </MDBBtn>\n                </MDBCardBody>\n              </MDBCard>\n            </MDBCol>\n\n          </MDBRow>\n        </section>\n      </div>\n\n    );\n  }\n}\n\nexport default GradeFilesUploadPage;\n"]},"metadata":{},"sourceType":"module"}