{"ast":null,"code":"import _classCallCheck from \"/home/willyum/Omar/SchoolFinal/front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/willyum/Omar/SchoolFinal/front/node_modules/@babel/runtime/helpers/esm/createClass\";\nexport var RandomPassword =\n/*#__PURE__*/\nfunction () {\n  function RandomPassword() {\n    _classCallCheck(this, RandomPassword);\n\n    this.characters = '';\n  }\n\n  _createClass(RandomPassword, [{\n    key: \"setCount\",\n    value: function setCount(count) {\n      this.count = count;\n      return this;\n    }\n  }, {\n    key: \"setLength\",\n    value: function setLength(length) {\n      this.length = length;\n      return this;\n    }\n  }, {\n    key: \"setUpperCase\",\n    value: function setUpperCase(isUpperCase) {\n      if (isUpperCase) {\n        this.characters += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n      }\n\n      return this;\n    }\n  }, {\n    key: \"setLowerCase\",\n    value: function setLowerCase(isLowerCase) {\n      if (isLowerCase) {\n        this.characters += 'abcdefghijklmnopqrstuvwxyz';\n      }\n\n      return this;\n    }\n  }, {\n    key: \"setNumberCase\",\n    value: function setNumberCase(isNumeric) {\n      if (isNumeric) {\n        this.characters += '0123456789';\n      }\n\n      return this;\n    }\n  }, {\n    key: \"setSymbol\",\n    value: function setSymbol(isSymbolic) {\n      if (isSymbolic) {\n        this.characters += '!@$%^&*()<>,.?/[]{}-=_+';\n      }\n\n      return this;\n    }\n  }, {\n    key: \"generate\",\n    value: function generate() {\n      var characterList = this.characters;\n\n      if (characterList.length <= 0) {\n        return 'May\\'be you\\'re in search of unknown! Keep looking';\n      }\n\n      var password = '';\n      var passwords = [];\n\n      for (var j = 0; j < this.count; j++) {\n        for (var i = 0; i < this.length; ++i) {\n          password += characterList[getRandomInt(0, characterList.length - 1)];\n        }\n\n        passwords.push(password);\n        password = '';\n      }\n\n      return passwords;\n    }\n  }]);\n\n  return RandomPassword;\n}();\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}","map":{"version":3,"sources":["/home/willyum/Omar/SchoolFinal/front/src/utils/RandomPassword.js"],"names":["RandomPassword","characters","count","length","isUpperCase","isLowerCase","isNumeric","isSymbolic","characterList","password","passwords","j","i","getRandomInt","push","min","max","Math","floor","random"],"mappings":";;AAAA,WAAaA,cAAb;AAAA;AAAA;AACE,4BAAc;AAAA;;AACZ,SAAKC,UAAL,GAAkB,EAAlB;AACD;;AAHH;AAAA;AAAA,6BAIWC,KAJX,EAIkB;AACd,WAAKA,KAAL,GAAaA,KAAb;AACA,aAAO,IAAP;AACD;AAPH;AAAA;AAAA,8BAQYC,MARZ,EAQoB;AAChB,WAAKA,MAAL,GAAcA,MAAd;AACA,aAAO,IAAP;AACD;AAXH;AAAA;AAAA,iCAYeC,WAZf,EAY4B;AACxB,UAAIA,WAAJ,EAAiB;AACf,aAAKH,UAAL,IAAmB,4BAAnB;AACD;;AACD,aAAO,IAAP;AACD;AAjBH;AAAA;AAAA,iCAkBeI,WAlBf,EAkB4B;AACxB,UAAIA,WAAJ,EAAiB;AACf,aAAKJ,UAAL,IAAmB,4BAAnB;AACD;;AACD,aAAO,IAAP;AACD;AAvBH;AAAA;AAAA,kCAwBgBK,SAxBhB,EAwB2B;AACvB,UAAIA,SAAJ,EAAe;AACb,aAAKL,UAAL,IAAmB,YAAnB;AACD;;AACD,aAAO,IAAP;AACD;AA7BH;AAAA;AAAA,8BA8BYM,UA9BZ,EA8BwB;AACpB,UAAIA,UAAJ,EAAgB;AACd,aAAKN,UAAL,IAAmB,yBAAnB;AACD;;AACD,aAAO,IAAP;AACD;AAnCH;AAAA;AAAA,+BAoCa;AACT,UAAIO,aAAa,GAAG,KAAKP,UAAzB;;AACA,UAAIO,aAAa,CAACL,MAAd,IAAwB,CAA5B,EAA+B;AAC7B,eAAO,oDAAP;AACD;;AACD,UAAIM,QAAQ,GAAG,EAAf;AACA,UAAIC,SAAS,GAAG,EAAhB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKT,KAAzB,EAAgCS,CAAC,EAAjC,EAAqC;AACnC,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKT,MAAzB,EAAiC,EAAES,CAAnC,EAAsC;AAEpCH,UAAAA,QAAQ,IAAID,aAAa,CAACK,YAAY,CAAC,CAAD,EAAIL,aAAa,CAACL,MAAd,GAAuB,CAA3B,CAAb,CAAzB;AAED;;AACDO,QAAAA,SAAS,CAACI,IAAV,CAAeL,QAAf;AACAA,QAAAA,QAAQ,GAAG,EAAX;AAGD;;AAED,aAAOC,SAAP;AACD;AAxDH;;AAAA;AAAA;;AA2DA,SAASG,YAAT,CAAsBE,GAAtB,EAA2BC,GAA3B,EAAgC;AAC9B,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAArD;AACD","sourcesContent":["export class RandomPassword {\n  constructor() {\n    this.characters = '';\n  }\n  setCount(count) {\n    this.count = count;\n    return this;\n  }\n  setLength(length) {\n    this.length = length;\n    return this;\n  }\n  setUpperCase(isUpperCase) {\n    if (isUpperCase) {\n      this.characters += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    }\n    return this;\n  }\n  setLowerCase(isLowerCase) {\n    if (isLowerCase) {\n      this.characters += 'abcdefghijklmnopqrstuvwxyz';\n    }\n    return this;\n  }\n  setNumberCase(isNumeric) {\n    if (isNumeric) {\n      this.characters += '0123456789';\n    }\n    return this;\n  }\n  setSymbol(isSymbolic) {\n    if (isSymbolic) {\n      this.characters += '!@$%^&*()<>,.?/[]{}-=_+';\n    }\n    return this;\n  }\n  generate() {\n    let characterList = this.characters;\n    if (characterList.length <= 0) {\n      return 'May\\'be you\\'re in search of unknown! Keep looking';\n    }\n    var password = '';\n    var passwords = [];\n    for (let j = 0; j < this.count; j++) {\n      for (let i = 0; i < this.length; ++i) {\n        \n        password += characterList[getRandomInt(0, characterList.length - 1)];\n        \n      }\n      passwords.push(password)\n      password = ''\n      \n      \n    }\n    \n    return passwords\n  }\n}\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n"]},"metadata":{},"sourceType":"module"}