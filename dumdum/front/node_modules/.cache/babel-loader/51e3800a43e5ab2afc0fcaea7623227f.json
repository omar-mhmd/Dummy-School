{"ast":null,"code":"import _regeneratorRuntime from \"/home/willyum/Omar/SchoolFinal/front/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/willyum/Omar/SchoolFinal/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/willyum/Omar/SchoolFinal/front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/willyum/Omar/SchoolFinal/front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/willyum/Omar/SchoolFinal/front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/willyum/Omar/SchoolFinal/front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/willyum/Omar/SchoolFinal/front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/willyum/Omar/SchoolFinal/front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/willyum/Omar/SchoolFinal/front/src/Pages/ProfessorPinPage/ProfessorPinPage.js\";\nimport React from 'react';\nimport { RandomPassword } from '../../utils/RandomPassword';\nimport moon from '../../assets/images/moon.png';\nimport sun from '../../assets/images/sun.png';\nimport ClipBoard from '../../components/ClipBoard/ClipBoard';\nimport Toggle from '../../components/Toogle/index.css';\nimport 'terminal.css';\nimport '../../assets/css/index.css';\n\nvar ProfessorPinPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProfessorPinPage, _React$Component);\n\n  function ProfessorPinPage(props) {\n    var _this;\n\n    _classCallCheck(this, ProfessorPinPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProfessorPinPage).call(this, props));\n\n    _this.handleCheckbox = function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          checked = _e$target.checked;\n\n      _this.setState(_defineProperty({}, name, checked));\n\n      _this.generatePwd();\n    };\n\n    _this.handleRadioButton = function (e) {\n      var _e$target2 = e.target,\n          name = _e$target2.name,\n          value = _e$target2.value;\n      debugger;\n      console.log(e.target);\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.onSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(evt) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (_this.state.pwd.length === 0) {\n                  _this.generatePwd();\n\n                  setTimeout(function () {\n                    _this.onSubmit();\n                  }, 1000);\n                } else {\n                  debugger;\n\n                  _this.state.pwd.forEach(\n                  /*#__PURE__*/\n                  function () {\n                    var _ref2 = _asyncToGenerator(\n                    /*#__PURE__*/\n                    _regeneratorRuntime.mark(function _callee(pin) {\n                      var response, answer;\n                      return _regeneratorRuntime.wrap(function _callee$(_context) {\n                        while (1) {\n                          switch (_context.prev = _context.next) {\n                            case 0:\n                              _context.next = 2;\n                              return fetch(\"http://localhost:8080/professor\", {\n                                method: 'POST',\n                                headers: {\n                                  'Content-type': 'application/json',\n                                  'Accept': 'application/json',\n                                  'Accept-Charset': 'utf-8'\n                                },\n                                body: JSON.stringify({\n                                  pin: pin,\n                                  expiry_date: _this.state.date,\n                                  grade_id: _this.state.selected_grade\n                                })\n                              });\n\n                            case 2:\n                              response = _context.sent;\n                              _context.next = 5;\n                              return response.json();\n\n                            case 5:\n                              answer = _context.sent;\n\n                              if (answer.success) {\n                                alert('Professor Pin Created');\n\n                                _this.setState({\n                                  pwd: [],\n                                  selected_grade: null\n                                });\n                              }\n\n                            case 7:\n                            case \"end\":\n                              return _context.stop();\n                          }\n                        }\n                      }, _callee);\n                    }));\n\n                    return function (_x2) {\n                      return _ref2.apply(this, arguments);\n                    };\n                  }()); // filesArray.map((file, index) => body.append(`files[${index}]`, file))\n\n                }\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.formatPWS = function () {\n      var pwd = _this.state.pwd;\n      var pwd_string = '';\n      pwd.map(function (item) {\n        debugger;\n        pwd_string += item + '\\n';\n        return item;\n      });\n      return pwd_string;\n    };\n\n    _this.state = {\n      length: 8,\n      count: '',\n      pwd: [],\n      upperCase: true,\n      lowerCase: true,\n      numeric: true,\n      symbol: false,\n      theme: 'light',\n      date: '',\n      grades: [],\n      selected_grade: null\n    };\n    return _this;\n  }\n\n  _createClass(ProfessorPinPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.generatePwd();\n      fetch('http://localhost:8080/grade').then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        if (data.success) {\n          _this2.setState({\n            grades: data.results\n          });\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"generatePwd\",\n    value: function generatePwd(evt) {\n      var _this$state = this.state,\n          upperCase = _this$state.upperCase,\n          lowerCase = _this$state.lowerCase,\n          numeric = _this$state.numeric,\n          symbol = _this$state.symbol,\n          length = _this$state.length,\n          count = _this$state.count;\n      var pwd = new RandomPassword().setLength(length).setCount(count).setLowerCase(lowerCase).setUpperCase(upperCase).setNumberCase(numeric).setSymbol(symbol).generate();\n      this.setState({\n        pwd: pwd\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: 'professor-pin-page',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        style: {\n          marginTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \" terminal-prompt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Generate a secure password\")), React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"input-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        id: \"input\",\n        className: this.state.theme,\n        name: \"password\",\n        readOnly: true,\n        rows: this.state.pwd.length > 8 ? this.state.pwd.length : 8,\n        value: this.formatPWS(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"clipboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(ClipBoard, {\n        theme: this.state.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      })))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }), React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Customize your password\")), React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"checkbox-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Uppercase\", React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: this.state.upperCase,\n        name: \"upperCase\",\n        onChange: function onChange(e) {\n          return _this3.handleCheckbox(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"checkmark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        className: \"checkbox-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Lowercase\", React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: this.state.lowerCase,\n        name: \"lowerCase\",\n        onChange: function onChange(e) {\n          return _this3.handleCheckbox(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"checkmark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        className: \"checkbox-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"Numeric\", React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: this.state.numeric,\n        name: \"numeric\",\n        onChange: function onChange(e) {\n          return _this3.handleCheckbox(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"checkmark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        className: \"checkbox-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"Symbols\", React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: this.state.symbol,\n        name: \"symbol\",\n        onChange: function onChange(e) {\n          return _this3.handleCheckbox(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"checkmark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"col-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"Password Length:\"), \"\\xA0\\xA0\"), React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        min: \"8\",\n        max: \"40\",\n        style: {\n          width: 65\n        },\n        value: this.state.length,\n        onChange: function onChange(e) {\n          _this3.setState({\n            length: e.target.value\n          });\n\n          _this3.generatePwd();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }))), \"\\xA0\", React.createElement(\"div\", {\n        className: \"slider-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"slider\",\n        type: \"range\",\n        min: \"8\",\n        max: \"40\",\n        value: this.state.length,\n        onChange: function onChange(e) {\n          _this3.setState({\n            length: e.target.value\n          }, function () {\n            _this3.generatePwd();\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }))), \"\\xA0\", React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, \"Password Count:\"), \"\\xA0\\xA0\", React.createElement(\"input\", {\n        type: \"number\",\n        min: \"1\",\n        max: \"40\",\n        style: {\n          width: 65\n        },\n        value: this.state.count,\n        onChange: function onChange(e) {\n          _this3.setState({\n            count: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col\",\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'auto auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, \"Expiry Date: \\xA0\\xA0\"), React.createElement(\"input\", {\n        type: \"date\",\n        min: new Date().toISOString().split('T')[0],\n        value: this.state.date,\n        onChange: function onChange(e) {\n          _this3.setState({\n            date: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }))), \"\\xA0\"))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn  btn-primary\",\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, \"Generate\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return ProfessorPinPage;\n}(React.Component);\n\nexport default ProfessorPinPage;","map":{"version":3,"sources":["/home/willyum/Omar/SchoolFinal/front/src/Pages/ProfessorPinPage/ProfessorPinPage.js"],"names":["React","RandomPassword","moon","sun","ClipBoard","Toggle","ProfessorPinPage","props","handleCheckbox","e","target","name","checked","setState","generatePwd","handleRadioButton","value","console","log","onSubmit","evt","state","pwd","length","setTimeout","forEach","pin","fetch","method","headers","body","JSON","stringify","expiry_date","date","grade_id","selected_grade","response","json","answer","success","alert","formatPWS","pwd_string","map","item","count","upperCase","lowerCase","numeric","symbol","theme","grades","then","data","results","catch","error","setLength","setCount","setLowerCase","setUpperCase","setNumberCase","setSymbol","generate","marginTop","width","display","gridTemplateColumns","Date","toISOString","split","textAlign","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { RandomPassword } from '../../utils/RandomPassword'\nimport moon from '../../assets/images/moon.png'\nimport sun from '../../assets/images/sun.png'\nimport ClipBoard from '../../components/ClipBoard/ClipBoard'\nimport Toggle from '../../components/Toogle/index.css'\n\nimport 'terminal.css';\nimport '../../assets/css/index.css';\n\nclass ProfessorPinPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      length: 8,\n      count: '',\n      pwd: [],\n      upperCase: true,\n      lowerCase: true,\n      numeric: true,\n      symbol: false,\n      theme: 'light',\n      date: '',\n      grades: [],\n      selected_grade: null,\n    };\n  }\n  componentDidMount() {\n    this.generatePwd();\n    fetch('http://localhost:8080/grade')\n        .then(response => response.json())\n        .then(data => {\n          if (data.success) {\n            this.setState({\n              grades: data.results,\n            })\n          }\n        })\n        .catch(error => {\n          console.log(error);\n        })\n  }\n  generatePwd(evt) {\n    const {upperCase, lowerCase, numeric, symbol, length, count} = this.state;\n    let pwd = new RandomPassword()\n        .setLength(length)\n        .setCount(count)\n        .setLowerCase(lowerCase)\n        .setUpperCase(upperCase)\n        .setNumberCase(numeric)\n        .setSymbol(symbol)\n        .generate();\n    this.setState({pwd});\n  }\n  \n  handleCheckbox = (e) => {\n    const {name, checked} = e.target;\n    this.setState({\n      [name]: checked,\n    });\n    this.generatePwd();\n  }\n  \n  handleRadioButton = (e) => {\n    const {name, value} = e.target;\n    \n    debugger;\n    console.log(e.target);\n    this.setState({\n      [name]: value,\n    })\n  }\n  \n  onSubmit = async evt => {\n     if (this.state.pwd.length === 0) {\n       this.generatePwd();\n       setTimeout(()=>{\n         this.onSubmit();\n\n       }, 1000)\n    } else {\n      debugger;\n      this.state.pwd.forEach(async pin => {\n        const response = await fetch(`http://localhost:8080/professor`,\n            {\n              method: 'POST',\n              headers: {\n                'Content-type': 'application/json',\n                'Accept': 'application/json',\n                'Accept-Charset': 'utf-8',\n              }, body: JSON.stringify({\n                pin,\n                expiry_date: this.state.date,\n                grade_id: this.state.selected_grade,\n              }),\n            });\n        const answer = await response.json();\n        if (answer.success) {\n          alert('Professor Pin Created')\n          this.setState(\n              {\n                pwd: [],\n                selected_grade: null,\n              },\n          )\n        }\n      })\n      // filesArray.map((file, index) => body.append(`files[${index}]`, file))\n    }\n  }\n  \n  formatPWS = () => {\n    const pwd = this.state.pwd;\n    let pwd_string = '';\n    pwd.map(item => {\n      debugger;\n      pwd_string += item + '\\n';\n      return item;\n    })\n    return pwd_string;\n  }\n  \n  render() {\n    return (\n        <div className={'professor-pin-page'}>\n          <div className=\"container\" style={{marginTop: 20}}>\n            <section>\n              <header>\n                <div className=\"row\">\n                  <div className=\"col\">\n                    {/* <h1>Select a Grade</h1> */}\n                    {/* <div className=\"grade-wrapper\">\n                      {this.state.grades.map((grade, index) => {\n                        return (\n                            <div className={'input-group'} key={index}>\n                              <input type={'radio'} id={`grade-${index}`} name={'selected_grade'}\n                                     onChange={this.handleRadioButton}\n                                     value={grade.id}\n                                     checked={parseInt(grade.id) === parseInt(this.state.selected_grade)}\n                              />\n                              <label htmlFor={`grade-${index}`}>{grade.name}</label>\n                            </div>\n                        )\n                      })}\n                    </div> */}\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <h1 className=\" terminal-prompt\">\n                      Generate a secure password\n                    </h1>\n                  </div>\n                  <div className=\"col\">\n                  </div>\n                </div>\n              </header>\n              <div className=\"input-container\">\n                <textarea\n                    id=\"input\"\n                    className={this.state.theme}\n                    name=\"password\"\n                    readOnly\n                    rows={this.state.pwd.length > 8 ? this.state.pwd.length : 8}\n                    value={this.formatPWS()}\n                />\n                \n                <div className=\"clipboard\">\n                  <ClipBoard theme={this.state.theme}/>\n                </div>\n              </div>\n            </section>\n            <hr/>\n            <section>\n              <header>\n                <h3>Customize your password</h3>\n              </header>\n              <fieldset>\n                <div className=\"row\">\n                  <div className=\"col-4\">\n                    <div className=\"form-group\">\n                      <label className=\"checkbox-container\">\n                        Uppercase\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.upperCase}\n                            name=\"upperCase\"\n                            onChange={e => this.handleCheckbox(e)}\n                        />\n                        <span className=\"checkmark\"/>\n                      </label>\n                      <label className=\"checkbox-container\">\n                        Lowercase\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.lowerCase}\n                            name=\"lowerCase\"\n                            onChange={e => this.handleCheckbox(e)}\n                        />\n                        <span className=\"checkmark\"/>\n                      </label>\n                      <label className=\"checkbox-container\">\n                        Numeric\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.numeric}\n                            name=\"numeric\"\n                            onChange={e => this.handleCheckbox(e)}\n                        />\n                        <span className=\"checkmark\"/>\n                      </label>\n                      <label className=\"checkbox-container\">\n                        Symbols\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.symbol}\n                            name=\"symbol\"\n                            onChange={e => this.handleCheckbox(e)}\n                        />\n                        <span className=\"checkmark\"/>\n                      </label>\n                    </div>\n                  </div>\n                  <div className=\"col-8\">\n                    <div className=\"form-group\">\n                      <div className=\"row\">\n                        <div className=\"col\">\n                          <label htmlFor=\"email\">Password Length:</label>\n                          &nbsp;&nbsp;\n                        </div>\n                        <div className=\"col\">\n                          <input\n                              type=\"number\"\n                              min=\"8\"\n                              max=\"40\"\n                              style={{width: 65}}\n                              value={this.state.length}\n                              onChange={e => {\n                                this.setState({length: e.target.value});\n                                this.generatePwd();\n                              }}\n                          />\n                        </div>\n                      </div>\n                      &nbsp;\n                      <div className=\"slider-container\">\n                        <input className=\"slider\" type=\"range\" min=\"8\" max=\"40\" value={this.state.length}\n                               onChange={e => {\n                                 this.setState({length: e.target.value}, () => {\n                                   this.generatePwd();\n                                 });\n                               }}\n                        />\n                      </div>\n                    </div>\n                    &nbsp;\n                    \n                    <div className=\"col\">\n                      <div className=\"form-group\">\n                        <div className=\"row\">\n                          <div className=\"col\">\n                            <label htmlFor=\"email\">Password Count:</label>\n                            &nbsp;&nbsp;\n                            <input type=\"number\" min=\"1\" max=\"40\" style={{width: 65}} value={this.state.count}\n                                   onChange={e => {\n                                     this.setState({count: e.target.value});\n                                   }}\n                            />\n                          </div>\n                          <div className=\"col\" style={{display: 'grid', gridTemplateColumns: 'auto auto'}}>\n                            <label htmlFor=\"email\">Expiry Date: &nbsp;&nbsp;</label>\n                            <input type=\"date\" min={new Date().toISOString().split('T')[0]} value={this.state.date}\n                                   onChange={e => {\n                                     this.setState({date: e.target.value});\n                              \n                                   }}\n                            />\n                          </div>\n                        </div>\n                        &nbsp;\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </fieldset>\n              <br/>\n              <div style={{textAlign: 'left'}}>\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <button className=\"btn  btn-primary\" onClick={this.onSubmit}>\n                      Generate\n                    </button>\n                  </div>\n                </div>\n                \n                <br/>\n                <br/>\n              </div>\n            </section>\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default ProfessorPinPage;\n"]},"metadata":{},"sourceType":"module"}